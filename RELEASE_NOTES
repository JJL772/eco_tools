R1.8	2017-04-06 Bruce Hill
	Added support for setting a TOP/configure/O.EPICS_HOST_ARCH/.is_built cookie to speed
		up epics-build for already built packages.
	Added tee to build.log in epics-build.sh
	Updated TEMPLATES path and expanded comments for absolute vs relative repo paths.
	Made BuildRelease failures rename build dir to R1.2-FAILED, but only
		if no target arch has previously built successfully.
	Exclude releases that end w/ FAILED from version report.
	Updated front-end launchers to all use git-utils-0.3.0
	Updated cvsParseModules function to handle -d dirPath, aliases and &subModule notation in CVSROOT/modules file.
	Fixed some svn checkout issues.
	Fixed argument processing in epics-checkout when a flag follows the module name.
		i.e. Now this works: eco -m asyn --batch
	Use --recursive option when cloning in case there are submodules.
	Fixed epics-release function TagRelease and made it push current branch and tag to origin.
	Commented out code that created a branch w/ the tag name as git describe --tags is a better way to verify the tag.
	Moved the module parse functions from epics-checkout.py to cvs_utils.py and git_utils.py.
	Added --repoPath and --gitFolder options to cvsModuleToGit and cvsSpearModuleToGit and updated
		them to check the parsed module 2 location dictionaries for repoPath and gitFolder.

R1.7	2017-03-02 Bruce Hill
	Tweaked RELEASE_SITE generation to make it identical w/ V_0_0_8 eco for pre R3.14.12.5 releases
	Moved export_release_site_file() from epics-checkout.py to version_utils.py
	Added cks for valid installTop dir and make it an absolute path.
	Improved test in checkoutModule() for whether or not desired tag is already checked out.

R1.6	2017-02-27 Bruce Hill
	Use separate readlink to get canonical path for script vs the directory it's in.
		Fixes error finding eco_tools dir on double soft links.
	Fixed check for existing RELEASE_SITE file in epics-checkout.py
	Fixed some epic-release script issues when not specifying --noTag
	Use "git fetch origin refs/tags/tag_name" in gitRepo.py for fetching tags as it works w/ older and newer git versions
	Added -h and --help options to git-bare-repo.sh along s/ a soft link git-bare-repo for easier cmd line invocation.

R1.5	2017-02-15 Bruce Hill
	Fixed some discrepancies between assemble_release_site_inputs_from_term() and
		assemble_release_site_inputs_from_file() by combining them into one function,
		assemble_release_site_inputs() with a batch parameter which is set to True
		for the old from_file() variant or if the --batch option is used on the cmd line.
	Added git-clone-github.sh script from GIT_TOP/package/epics/modules/git-clone-github.sh
	Added a variant called git-bare-repo.sh to facilitate creating bare repos w/ SLAC template
	Adding Kernel Module option to cvsModuleToGit.py

R1.4	2017-02-10 Bruce Hill
	Fixed code in Releaser.py to set release files read-only and dirs writable.
	Also added some code in epics-build.py to derive installTop for EPICS modules when not supplied by cmd line param
	Made epics-checkout default for EPICS_MODULES use new EPICS_SITE_TOP if user changed it.
		Also suppress unneeded PSPKG_ROOT for pre 3.14.12.5 releases as none of them need it.
	Adding RELEASE_NOTES for R1.0, R1.1, R1.2, and R1.3
	Made add-to-env.sh use git-utils-0.3.0 so we can use qgit
	Added Kernel Module option to cvsModuleToGit.py

R1.3	2017-02-06 Bruce Hill
	Lots of cleanup to epics-release so it can pull package
		name from working dir for both svn and git.
	epics-release now works from svn and git working dirs w/ just -r and -m options.

R1.2	2017-02-02 Bruce Hill
	Added conditional tests for creation/update of RELEASE_SITE
		1.  Not if its an EPICS base package, or not an EPICS package at all
		2. Step on a RELEASE_SITE pulled from the repo?
			No for PCDS dest paths, 	Yes for LCLS
	Reorganized a bit to consolidate some cookie cutter code blocks to one function.
	Tweaked output order of macro definitions to more closely match prior eco
		and added some TODO comments re future features
	Added new epics path functions: isBaseTop, isEpicsPackage, isPCDSPath, and get_base_versions.
	Use readlink -f instead of pwd -P for canonical paths.
	Add git-utils-0.2.0 release to env in add_env_pkg.sh so developers and module
		mergers can run the module conversion scripts.

R1.1	2017-02-02 Bruce Hill
	New routines in version_utils.py to determine epics_site_top and epics_base from env variables.
	Fixed various options for epics-build, epics-versions, epics-checkout, and epics-release.
	Made epics-release link invoke epics-release.py directly as all it needs is
		a python 2.7 version. That allows us to avoid issues w/ escaping quotes
		in epics-release.sh for --message parameters.
	Enhanced control over trunk branch for svnModuleToGit.py and made git_utils
		use our git repo template when creating new bare repos.

R1.0	2017-01-14 Bruce Hill
	Took EPICS_BASE_VER out of RELEASE_SITE as R3.15 doesn't like to see two different
		macros w/ the same value like BASE_MODULE_VERSION and EPICS_BASE_VER
	Fixed some issues re when to create vs delete a local build branch created from the tag.
	Reworked the fixPermissions code to use python modules instead of shell commands
		and cleaned up some status and diagnostic messages for a better user experience.
	Added a nifty git script, git-branch-status, I found that makes it easy to keep track
		of whether your branches are ahead or behind their upstream branch.
	Fixed shell setup scripts for epics-build, epics-checkout, etc to run the version
		in the setup script directory instead of always going to TOOLS_SITE_TOP/eco_tools.
		Allows development to be done by simply sourcing the add-to-env,sh script.
	Updates to eco:
		Now it's a soft link to bash script that runs epics-checkout.py.
		There's also a soft link called epics-checkout to the same launch script.
		The command line options are the same as the prior eco script.

		However, now the first choice when epics-checkout searchs for the package
		location is a git repo, if available.
		The rational for this is tht the initial import of a cvs or svn package
		to git is easy and doesn't take long.  Once in git, it's easier to do
		any new work using git, using lcls-trunk or pcds-trunk as needed till the
		merge is complete.
		The next stop on the search list is $TOOLS/eco_modulelist/modulelist.txt.
		If epics-checkout is having trouble finding your module, add a convenient
		shortcut name in eco_modulelist.
		Then CVS, and finally svn.
		If the package isn't found in any of those, it errors out.
	New EPICS utility scripts added:
	epics-build:
		Soft link to bash script that runs epics-build.py.
		Allows building one or more module releases either via command line or via a batch file.
	epics-versions:
		Soft link to bash script that runs epics-versions.py.
		Searches for the most current (or all) releases of one or more modules.
		Can also show module dependencies via -v option
		Also works for base, ioc/<IOC_NAME>, and some other common patterns
	epics-release:
		Soft link to bash script that runs epics-release.py.
		Rework of a PCDS svn script that facilitates creating epics releases in a std fashion w/ one easy command

V_0_0_8	5/6/2016, mshankar
	Initial version of svn support.
	Change command name to cvs2git per Mike Z. Improved documentation

V_0_0_7	3/2/2016, mshankar
	Change the gitignore to iocBoot/*/envPaths
	Added *~ to the default .gitignore.

V_0_0_6	2/19/2016, mshankar
	Add support for eco cvsimport

V_0_0_5	2/18/2016, mshankar
	Move the dialogs to the front of the workflow. Use zenity to indicate success/failure.
	Some testing on eco initrepo
	Added a command initrepo that initializes an empty git repo. It also adds the package to eco_modulelist

V_0_0_5	1/14/2016, mshankar
	Turn off the delimiters for the module name tab completion as well
